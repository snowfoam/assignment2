{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\chatapp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\lenovo\\Desktop\\chatapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\lenovo\\Desktop\\chatapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lenovo\\Desktop\\chatapp\\src\\components\\Home\\Home.vue?vue&type=template&id=15737ea2&scoped=true&","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\chatapp\\src\\components\\Home\\Home.vue","mtime":1576181518960},{"path":"C:\\Users\\lenovo\\Desktop\\chatapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\chatapp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\chatapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\chatapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}